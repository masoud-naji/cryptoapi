{"version":3,"file":"static/js/932.bfeca598.chunk.js","mappings":"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","sources":["Components/Pages/CompareImage.jsx","Components/UI/Card.jsx","webpack://cryptoapi/./src/Components/Styles/UsersList.module.css?e450","webpack://cryptoapi/./src/Components/Styles/about.module.css?4024","webpack://cryptoapi/./src/Components/Styles/infoCard.module.css?adbc","webpack://cryptoapi/./src/Components/UI/Card.module.css?f199"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport classes from \"../UI/Card.module.css\";\r\nimport cardStyle from \"../Styles/infoCard.module.css\";\r\nimport tablestyle from \"../Styles/UsersList.module.css\";\r\nimport style from \"../Styles/about.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport \"../Styles/progressbar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ReactCompareImage from \"react-compare-image\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 10,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst focusedStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\n// const formatArry = [\r\n//   \".jpg\",\r\n//   \".jpeg\",\r\n//   \".png\",\r\n//   \".gif\",\r\n//   \".bmp\",\r\n//   \".svg\",\r\n//   \".tiff\",\r\n//   \".tif\",\r\n//   \".webp\",\r\n//   \".ico\",\r\n//   \".raw\",\r\n//   \".psd\",\r\n//   \".ai\",\r\n//   \".eps\",\r\n//   \".pdf\",\r\n//   \".raw\",\r\n//   \".arw\",\r\n// ];\r\n\r\nconst CompareImage = () => {\r\n  const [File1, setFile1] = useState(\"\");\r\n  const [File2, setFile2] = useState(\"\");\r\n  const [errorDataFile1, setErrorDataFile1] = useState(\"\");\r\n  const [errorDataFile2, setErrorDataFile2] = useState(\"\");\r\n  const [Orientation, setOrientation] = useState(false);\r\n  const [aspectRatio, setaspectRatio] = useState(\"wider\");\r\n  const [File1path, setFile1path] = useState(\"\");\r\n  const [File2path, setFile2path] = useState(\"\");\r\n  ///resizer config\r\n  const [Loading, setLoading] = useState(false);\r\n  const [ExportbtnEnable, setExportbtnEnable] = useState(true);\r\n  const [ConverttbtnEnable, setConvertbtnEnable] = useState(true);\r\n  const [maxWidth, setMaxWidth] = useState(300);\r\n  const [maxHeight, setMaxHeight] = useState(300);\r\n  const [compressFormat, setCompressFormat] = useState(\"WEBP\");\r\n  const [quality, setQuality] = useState(100);\r\n  const [rotation, setRotation] = useState(0);\r\n\r\n  const [ImprtImgH1, setImprtImgH1] = useState(0);\r\n  const [ImprtImgW1, setImprtImgW1] = useState(0);\r\n\r\n  const [ImprtImgH2, setImprtImgH2] = useState(0);\r\n  const [ImprtImgW2, setImprtImgW2] = useState(0);\r\n\r\n  const [estSize, setestSize] = useState(0);\r\n\r\n  /////////////////////////drag and drop file upload/////////////////////////////\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      fileChangeHandler(File1path);\r\n    }, 500);\r\n    return () => {\r\n      setLoading(false);\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [rotation, quality, compressFormat, maxWidth, maxHeight, ExportbtnEnable]);\r\n\r\n  ////Left side\r\n  const {\r\n    getRootProps: getRootPropsFile1,\r\n    getInputProps: getInputPropsFile1,\r\n    isFocused: isFocusedFile1,\r\n    isDragAccept: isDragAcceptFile1,\r\n    isDragReject: isDragRejectFile1,\r\n  } = useDropzone({\r\n    onDrop: (acceptedFile) => {\r\n      showFile1(acceptedFile[0]);\r\n    },\r\n    accept: \"image/*\",\r\n  });\r\n\r\n  const stylefile1 = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isFocusedFile1 ? focusedStyle : {}),\r\n      ...(isDragAcceptFile1 ? acceptStyle : {}),\r\n      ...(isDragRejectFile1 ? rejectStyle : {}),\r\n    }),\r\n    [isFocusedFile1, isDragAcceptFile1, isDragRejectFile1]\r\n  );\r\n\r\n  const showFile1 = (image) => {\r\n    const reader = new FileReader();\r\n    setFile1path(image);\r\n    reader.onloadend = () => {\r\n      const Imageresult = reader.result;\r\n\r\n      if (!Imageresult.length) {\r\n        setErrorDataFile1(\"**Not valid Image file!**\");\r\n        setFile1(\"\");\r\n        return;\r\n      }\r\n      try {\r\n        setFile1(Imageresult);\r\n        setConvertbtnEnable(false);\r\n      } catch (error) {\r\n        setErrorDataFile1(\"**Not valid Image file!**\");\r\n        setFile1(\"\");\r\n        return;\r\n      }\r\n    };\r\n    reader.readAsDataURL(image);\r\n  };\r\n  ////Right side\r\n  const {\r\n    getRootProps: getRootPropsFile2,\r\n    getInputProps: getInputPropsFile2,\r\n    isFocused: isFocusedFile2,\r\n    isDragAccept: isDragAcceptFile2,\r\n    isDragReject: isDragRejectFile2,\r\n  } = useDropzone({\r\n    onDrop: (acceptedFile) => {\r\n      showFile2(acceptedFile[0]);\r\n    },\r\n    accept: \"image/*\",\r\n  });\r\n\r\n  const stylefile2 = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isFocusedFile2 ? focusedStyle : {}),\r\n      ...(isDragAcceptFile2 ? acceptStyle : {}),\r\n      ...(isDragRejectFile2 ? rejectStyle : {}),\r\n    }),\r\n    [isFocusedFile2, isDragAcceptFile2, isDragRejectFile2]\r\n  );\r\n\r\n  const showFile2 = (image) => {\r\n    setFile2path(image);\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      const Imageresult = reader.result;\r\n\r\n      if (!Imageresult.length) {\r\n        setErrorDataFile2(\"**Not valid Image file!**\");\r\n        setFile2(\"\");\r\n        return;\r\n      }\r\n      try {\r\n        setFile2(Imageresult);\r\n      } catch (error) {\r\n        setErrorDataFile2(\"**Not valid Image file!**\");\r\n        setFile2(\"\");\r\n        return;\r\n      }\r\n    };\r\n    reader.readAsDataURL(image);\r\n  };\r\n\r\n  const dateFile1path =\r\n    File1path && new Date(File1path.lastModified).toString().slice(0, 15);\r\n  // console.log(dateFile1path);\r\n  const dateFile2path =\r\n    File2path && new Date(File2path.lastModified).toString().slice(0, 15);\r\n  // console.log(dateFile2path);\r\n\r\n  ////////////////////////// Convert Image to base64 ///////////////////////////////\r\n\r\n  const sizemaker = (imagesize) => {\r\n    let result = Math.round(imagesize / 10) / 100;\r\n    if (result > 1024) {\r\n      result = Math.round((result / 1024) * 100) / 100 + \" MB\";\r\n    } else {\r\n      result = result + \" KB\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const fileChangeHandler = (File1path) => {\r\n    if (File1path) {\r\n      try {\r\n        setLoading(true);\r\n        Resizer.imageFileResizer(\r\n          File1path,\r\n          maxWidth,\r\n          maxHeight,\r\n          compressFormat,\r\n          quality,\r\n          rotation,\r\n          (uri) => {\r\n            setFile2(uri);\r\n\r\n            //method 1\r\n            let base64Length = uri.length - (uri.indexOf(\",\") + 1);\r\n            let padding =\r\n              uri.charAt(uri.length - 2) === \"=\"\r\n                ? 2\r\n                : uri.charAt(uri.length - 1) === \"=\"\r\n                ? 1\r\n                : 0;\r\n            let fileSize = base64Length * 0.75 - padding;\r\n\r\n            // method 2\r\n            // let base64lenght = uri.split(\",\")[1].split(\"=\")[0].length;\r\n            // let fileSize = base64lenght - (base64lenght / 8) * 2;\r\n            setestSize(fileSize);\r\n          },\r\n          \"base64\",\r\n          200,\r\n          200\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 400);\r\n  };\r\n\r\n  ////////////////////////////test download//////////////////////////////\r\n\r\n  function downloadImage(src) {\r\n    const lastDot = File1path.path.lastIndexOf(\".\");\r\n    const fileName = File1path.path.substring(0, lastDot);\r\n    const img = new Image();\r\n    img.crossOrigin = \"anonymous\"; // This tells the browser to request cross-origin access when trying to download the image data.\r\n    // ref: https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image#Implementing_the_save_feature\r\n    img.src = src;\r\n    img.onload = () => {\r\n      // create Canvas\r\n      const canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0);\r\n      // create a tag\r\n      const a = document.createElement(\"a\");\r\n      a.download = `${fileName}.${compressFormat}`;\r\n      a.href = canvas.toDataURL(`${fileName}.${compressFormat}`);\r\n      a.click();\r\n    };\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 2 }}\r\n    >\r\n      <Helmet>\r\n        <title>Convert and Compare Images</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Use this handy webp converter to resize you images from one format to another.\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Convert images from one format to another with the powerful image converter in this free image tool.\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Convert images and resize them in webp format with this handy online tool.\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"This application helps you to compare two images and find the best match.\"\r\n        />\r\n      </Helmet>\r\n      <Card className={`${classes.input} ${classes.topchartdetail}`}>\r\n        <div className={classes.infodisplay}>\r\n          <h1 className={tablestyle.title}>Image Compare & Convert</h1>\r\n          <h2 className={tablestyle.smallsubtitle}>\r\n            Open and compare two images and find the best match. Convert images\r\n            and resize them in webp , jpg , png format with this handy online tool.\r\n          </h2>\r\n          <div\r\n            className={classes.HeroPlace}\r\n            style={{\r\n              paddingTop: \"2rem\",\r\n              height: \"fit-content\",\r\n              minHeight: \"fit-content\",\r\n            }}\r\n          >\r\n            {/* ////////////////////////////  file 1 //////////////////////////////// */}\r\n            <div\r\n              style={{\r\n                background: \"rgba(54, 162, 235, 1)\",\r\n                minHeight: \"14rem\",\r\n                aspectRatio: \"16/7\",\r\n              }}\r\n              className={(cardStyle.container, classes.card)}\r\n              {...getRootPropsFile1({ stylefile1 })}\r\n            >\r\n              <input {...getInputPropsFile1()} />\r\n              <div className={cardStyle.tableContainer}>\r\n                For converting or compare Drag 'n' drop first file here\r\n                <br />, or click to select files\r\n              </div>\r\n              <div className=\"container\">\r\n                <p>Only Images Accepted</p>\r\n              </div>\r\n\r\n              {errorDataFile1 ? (\r\n                errorDataFile1\r\n              ) : File1path ? (\r\n                <ul>\r\n                  <li>Name: {File1path.path}</li>\r\n                  <li>Size: {sizemaker(File1path.size)}</li>\r\n                  {/* <li>last Modified Date: {dateFile1path}</li> */}\r\n                  <li>Height :{ImprtImgW1}</li>\r\n                  <li>Width : {ImprtImgH1}</li>\r\n                  <li>\r\n                    <img\r\n                      src={File1}\r\n                      alt=\"\"\r\n                      onLoad={({ target: img }) => {\r\n                        const { offsetHeight, offsetWidth } = img;\r\n                        setImprtImgH1(offsetHeight);\r\n                        setImprtImgW1(offsetWidth);\r\n                        setMaxHeight(offsetHeight);\r\n                        setMaxWidth(offsetWidth);\r\n                        console.log(offsetHeight, offsetWidth);\r\n                      }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        marginLeft: \"-10000px\",\r\n                      }}\r\n                    />\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n\r\n            {/* ////////////////////////////  File 2 //////////////////////////////// */}\r\n            {ConverttbtnEnable ? (\r\n              <div\r\n                style={{\r\n                  background: \"rgba(54, 162, 235, .5)\",\r\n                  minHeight: \"14rem\",\r\n                  aspectRatio: \"16/7\",\r\n                }}\r\n                className={(cardStyle.container, classes.card)}\r\n              >\r\n                <div className={cardStyle.tableContainer}>\r\n                  For Comparing two Images you have to add the first image\r\n                  section\r\n                  <div className=\"container\">\r\n                    <p>🚫Add first file first</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  background: \"rgba(54, 162, 235, 1)\",\r\n                  minHeight: \"14rem\",\r\n                  aspectRatio: \"16/7\",\r\n                }}\r\n                className={(cardStyle.container, classes.card)}\r\n                {...getRootPropsFile2({ stylefile2 })}\r\n              >\r\n                <input {...getInputPropsFile2()} />\r\n                <div className={cardStyle.tableContainer}>\r\n                  For compare Drag 'n' drop second file here , or click to\r\n                  select files\r\n                </div>\r\n                <div className=\"container\">\r\n                  <p>Only Images Accepted</p>\r\n                </div>\r\n                {errorDataFile2 ? (\r\n                  errorDataFile2\r\n                ) : File2path ? (\r\n                  <ul>\r\n                    <li>Name: {File2path.path}</li>\r\n                    <li>Size: {sizemaker(File2path.size)}</li>\r\n                    {/* <li>last Modified Date: {File2path.size}</li> */}\r\n                    <li>Height :{ImprtImgW2}</li>\r\n                    <li>Width : {ImprtImgH2}</li>\r\n                    <li>\r\n                      <img\r\n                        src={File2}\r\n                        alt=\"\"\r\n                        onLoad={({ target: img }) => {\r\n                          const { offsetHeight, offsetWidth } = img;\r\n                          setImprtImgH2(offsetHeight);\r\n                          setImprtImgW2(offsetWidth);\r\n                          console.log(offsetHeight, offsetWidth);\r\n                        }}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          marginLeft: \"-10000px\",\r\n                        }}\r\n                      />\r\n                    </li>\r\n                  </ul>\r\n                ) : null}\r\n              </div>\r\n            )}\r\n\r\n            {/* ------------------------------------------- */}\r\n            {/* ? coinAllInfo.description.en.replace(/<[^>]+>/g, \"\") */}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      <Card className={`${classes.input} ${classes.topchartdetail}`}>\r\n        <div>\r\n          <div\r\n            className={classes.HeroPlace}\r\n            style={{\r\n              height: \"fit-content\",\r\n              maxHeight: \"fit-content\",\r\n              minHeight: \"fit-content\",\r\n            }}\r\n          >\r\n            <button\r\n              className=\"anchorBtn\"\r\n              onClick={() => setOrientation(!Orientation)}\r\n            >\r\n              Orintation - {Orientation ? \"Vertical\" : \"Horizontal\"}\r\n            </button>\r\n            <button\r\n              className=\"anchorBtn\"\r\n              onClick={() =>\r\n                setaspectRatio(aspectRatio === \"wider\" ? \"taller\" : \"wider\")\r\n              }\r\n            >\r\n              aspectRatio -{\" \"}\r\n              {aspectRatio === \"wider\" ? \"Vertical\" : \"Horizontal\"}\r\n            </button>\r\n\r\n            <button\r\n              className=\"anchorBtn\"\r\n              disabled={ConverttbtnEnable}\r\n              onClick={() => {\r\n                setFile2(File1);\r\n                setExportbtnEnable(false);\r\n              }}\r\n            >\r\n              {ConverttbtnEnable ? \"🚫 \" : \"\"}\r\n              Convert Image\r\n            </button>\r\n            <button\r\n              className=\"anchorBtn\"\r\n              onClick={() => {\r\n                downloadImage(File2);\r\n              }}\r\n              disabled={ExportbtnEnable}\r\n            >\r\n              {ExportbtnEnable ? \"🚫 \" : \"\"}\r\n              Export Image\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* ////////////////////////////  Convert Control //////////////////////////////// */}\r\n\r\n      <div\r\n        className={classes.ImageEditor}\r\n        // className={(cardStyle.container, classes.card)}\r\n      >\r\n        <div className={cardStyle.tableContainer}></div>\r\n        <section style={{ display: \"grid\" }}>\r\n          <label>Width:&nbsp;&nbsp;</label>\r\n          <input\r\n            value={maxWidth}\r\n            id=\"maxWidth\"\r\n            type=\"number\"\r\n            placeholder=\"Max Width...\"\r\n            onChange={(e) => {\r\n              setMaxWidth(e.target.value);\r\n              // fileChangeHandler(File1path);\r\n            }}\r\n          />\r\n        </section>\r\n        <section style={{ display: \"grid\" }}>\r\n          <label>Height:&nbsp;</label>\r\n          <input\r\n            value={maxHeight}\r\n            id=\"maxHeight\"\r\n            type=\"number\"\r\n            placeholder=\"Max Height..\"\r\n            onChange={(e) => {\r\n              setMaxHeight(e.target.value);\r\n              // fileChangeHandler(File1path);\r\n            }}\r\n          />\r\n        </section>\r\n        <section style={{ display: \"grid\" }}>\r\n          <label>Format:&nbsp;</label>\r\n          <select\r\n            name=\"compressFormat\"\r\n            id=\"compressFormat\"\r\n            onChange={(e) => {\r\n              setCompressFormat(e.target.value);\r\n              // fileChangeHandler(File1path);\r\n            }}\r\n          >\r\n            <option value=\"WEBP\">webp</option>\r\n            <option value=\"JPEG\">jpeg</option>\r\n            <option value=\"PNG\">png</option>\r\n          </select>\r\n        </section>\r\n        <label>Quality:{quality}</label>\r\n        <input\r\n          id=\"quality\"\r\n          type=\"range\"\r\n          min={1}\r\n          max={100}\r\n          step={1}\r\n          onChange={(e) => {\r\n            setQuality(e.target.value);\r\n            // fileChangeHandler(File1path);\r\n          }}\r\n        />\r\n        <label>Rotation:{rotation}</label>\r\n        <input\r\n          id=\"rotation\"\r\n          type=\"range\"\r\n          min={0}\r\n          max={360}\r\n          step={1}\r\n          onChange={(e) => {\r\n            setRotation(e.target.value);\r\n            // fileChangeHandler(File1path);\r\n          }}\r\n        />\r\n        <hr />\r\n        <label>\r\n          Estimated size:\r\n          {Loading ? (\r\n            <>\r\n              &nbsp; <Spinner animation=\"border\" size=\"sm\" />\r\n            </>\r\n          ) : estSize ? (\r\n            sizemaker(estSize)\r\n          ) : (\r\n            \"0\"\r\n          )}\r\n        </label>\r\n      </div>\r\n\r\n      {/* ////////////////////////////  Image //////////////////////////////// */}\r\n      <Card className={`${classes.input} ${classes.topchartdetail}`}>\r\n        <ReactCompareImage\r\n          leftImage={File1}\r\n          rightImage={File2}\r\n          vertical={Orientation}\r\n          aspectRatio={aspectRatio}\r\n        />\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CompareImage;\r\n","import React from 'react';\r\n\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={`${classes.card} ${props.className}`} >{props.children}</div>;\r\n};\r\n\r\nexport default Card;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"UsersList_users__LcNHG\",\"tableTitle\":\"UsersList_tableTitle__qYyie\",\"toptablestatus\":\"UsersList_toptablestatus__nLwV2\",\"userTable\":\"UsersList_userTable__F3Kw7\",\"myInput\":\"UsersList_myInput__6SrBS\",\"toptable\":\"UsersList_toptable__4MoWy\",\"toptable_child\":\"UsersList_toptable_child__GUYGb\",\"dropdown\":\"UsersList_dropdown__x4VL4\",\"dropdownsmall\":\"UsersList_dropdownsmall__R+jGy\",\"infotable\":\"UsersList_infotable__xiYka\",\"input--type-list__datalist\":\"UsersList_input--type-list__datalist__wzFTu\",\"errorMessage\":\"UsersList_errorMessage__oEbe0\",\"fearimg\":\"UsersList_fearimg__Omd46\",\"cover\":\"UsersList_cover__YHHcj\",\"homebackground\":\"UsersList_homebackground__AreU7\",\"background\":\"UsersList_background__jwql3\",\"foreground\":\"UsersList_foreground__6XkZr\",\"Maintitle\":\"UsersList_Maintitle__5GCuK\",\"title\":\"UsersList_title__XeMsP\",\"subtitle\":\"UsersList_subtitle__kmbnE\",\"smallsubtitle\":\"UsersList_smallsubtitle__VICUF\",\"section\":\"UsersList_section__WSKkP\",\"grid\":\"UsersList_grid__rhUuE\",\"gridInside\":\"UsersList_gridInside__ne15f\",\"minilist\":\"UsersList_minilist__5Sre7\",\"imageslider\":\"UsersList_imageslider__UD3Xr\",\"gridColSpan2\":\"UsersList_gridColSpan2__JNEtZ\",\"infobox\":\"UsersList_infobox__ChPUc\",\"ftoptable-right\":\"UsersList_ftoptable-right__s2gs7\",\"ftoptable-Middle\":\"UsersList_ftoptable-Middle__ylUYd\",\"toptable-left\":\"UsersList_toptable-left__huqqk\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"about_container__npQ8r\",\"ulabout\":\"about_ulabout__vsVaC\",\"textareatweet\":\"about_textareatweet__KRWZT\",\"litweet\":\"about_litweet__E-3g+\",\"watermatkchilds\":\"about_watermatkchilds__WIIyV\",\"watermarkdiv\":\"about_watermarkdiv__7jvZT\",\"bkgimage\":\"about_bkgimage__gyIeV\",\"twitterdiv\":\"about_twitterdiv__0lGr2\",\"flextbtn\":\"about_flextbtn__hHsue\",\"textareamain\":\"about_textareamain__Xytyi\",\"languagebtn\":\"about_languagebtn__T8zAi\",\"lorembox\":\"about_lorembox__FoMmY\",\"nvbbtn\":\"about_nvbbtn__lhCvO\",\"cta\":\"about_cta__a0GBA\",\"button\":\"about_button__lcHpb\",\"rangeselector\":\"about_rangeselector__dNRBx\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"infoCard_container__mHIFs\",\"tableContainer\":\"infoCard_tableContainer__M0Gob\",\"mycard\":\"infoCard_mycard__SYmTS\",\"container2\":\"infoCard_container2__4oi5D\",\"tableContainer2\":\"infoCard_tableContainer2__V35j0\",\"mycard2\":\"infoCard_mycard2__bUVcJ\",\"infotext\":\"infoCard_infotext__pXKDA\",\"regextexandhelp\":\"infoCard_regextexandhelp__mmPIU\",\"tableContainerdragndrop\":\"infoCard_tableContainerdragndrop__YBtRg\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__AFU4l\",\"clipboardinside\":\"Card_clipboardinside__2nExq\",\"clipboardinsidetext\":\"Card_clipboardinsidetext__-HyN1\",\"insidetitle\":\"Card_insidetitle__TeQ4m\",\"insidecontent\":\"Card_insidecontent__IgVNH\",\"inputinside\":\"Card_inputinside__dY3eR\",\"topchart\":\"Card_topchart__6Evm1\",\"topTwitter\":\"Card_topTwitter__googs\",\"topchartdetail\":\"Card_topchartdetail__5maGq\",\"has_text_left\":\"Card_has_text_left__3+AT0\",\"ReadMorebtc\":\"Card_ReadMorebtc__0T8Ti\",\"HeroPlace\":\"Card_HeroPlace__UMjNo\",\"HeroPlaceWif\":\"Card_HeroPlaceWif__498lK\",\"chartdisplay\":\"Card_chartdisplay__1VRYh\",\"chartdisplayWif\":\"Card_chartdisplayWif__zXx+y\",\"infodisplay\":\"Card_infodisplay__Kb8dp\",\"App\":\"Card_App__N2LES\",\"area\":\"Card_area__9b3RJ\",\"regixText\":\"Card_regixText__TPE4B\",\"OtherText\":\"Card_OtherText__6hFhg\",\"ImageEditor\":\"Card_ImageEditor__mvLMh\",\"flextbtn\":\"Card_flextbtn__7Elqd\"};"],"names":["baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","focusedStyle","acceptStyle","rejectStyle","useState","File1","setFile1","File2","setFile2","errorDataFile1","setErrorDataFile1","errorDataFile2","setErrorDataFile2","Orientation","setOrientation","aspectRatio","setaspectRatio","File1path","setFile1path","File2path","setFile2path","Loading","setLoading","ExportbtnEnable","setExportbtnEnable","ConverttbtnEnable","setConvertbtnEnable","maxWidth","setMaxWidth","maxHeight","setMaxHeight","compressFormat","setCompressFormat","quality","setQuality","rotation","setRotation","ImprtImgH1","setImprtImgH1","ImprtImgW1","setImprtImgW1","ImprtImgH2","setImprtImgH2","ImprtImgW2","setImprtImgW2","estSize","setestSize","useEffect","timeoutId","setTimeout","fileChangeHandler","clearTimeout","useDropzone","onDrop","acceptedFile","showFile1","accept","getRootPropsFile1","getRootProps","getInputPropsFile1","getInputProps","isFocusedFile1","isFocused","isDragAcceptFile1","isDragAccept","isDragRejectFile1","isDragReject","stylefile1","useMemo","image","reader","FileReader","onloadend","Imageresult","result","length","error","readAsDataURL","showFile2","getRootPropsFile2","getInputPropsFile2","isFocusedFile2","isDragAcceptFile2","isDragRejectFile2","stylefile2","sizemaker","Date","lastModified","toString","slice","imagesize","Math","round","Resizer","uri","base64Length","indexOf","charAt","console","log","initial","opacity","animate","exit","duration","name","content","className","classes","tablestyle","style","paddingTop","height","minHeight","background","cardStyle","path","size","src","alt","onLoad","img","target","offsetHeight","offsetWidth","position","marginLeft","onClick","disabled","lastDot","lastIndexOf","fileName","substring","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","width","drawImage","a","download","href","toDataURL","click","downloadImage","value","id","type","placeholder","onChange","e","min","max","step","animation","leftImage","rightImage","vertical","props","children"],"sourceRoot":""}